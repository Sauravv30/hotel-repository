openapi: 3.0.3
info:
  title: HRS Hotels Booking
  description: |-
    This is a microservice application that used to do create, delete, update and get request for users

  termsOfService: http://swagger.io/terms/
  contact:
    email: sauravv30@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:8080/api/v1
tags:
  - name: hotel
    description: Hotel api
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: room
    description: Room api
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /hotel/{hotelId}:
    get:
      tags:
        - hotel
      summary: Get hotel by id
      description: Get hotel by id
      operationId: getHotelById
      parameters:
        - name: hotelId
          in: path
          description: Id of hotel to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception
  /hotel/create:
    post:
      tags:
        - hotel
      summary: Get hotel by id
      description: Get hotel by id
      operationId: createHotel
      requestBody:
        description: Create hotel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception

  /room/update/{roomId}:
    put:
      tags:
        - room
      summary: Book room.
      description: Book room.
      operationId: updateRoomDetails
      parameters:
        - name: roomId
          in: path
          description: roomId to be fetched
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update room details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'

        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets

  /room/book/{roomId}/{status}:
    put:
      tags:
        - room
      summary: Book hotel room.
      description: Book hotel room.
      operationId: bookHotelRoom
      parameters:
        - name: roomId
          in: path
          description: room to be booked
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: path
          description: Set room status either booked or cancelled
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'

        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets


  /room/add:
    post:
      tags:
        - room
      summary: Book room.
      description: Book room.
      operationId: addRoomDetails
      requestBody:
        description: Update room details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'

      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'

        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets


  /room/{roomId}:
    get:
      tags:
        - room
      summary: Get room details.
      description: Get room details.
      operationId: getRoomDetails
      parameters:
        - name: roomId
          in: path
          description: roomId to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'

        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets

components:
  schemas:
    Hotel:
      required:
        - name
        - location
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
        location:
          type: string
        room:
          type: array
          items:
            $ref: '#/components/schemas/Room'

    Room:

      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        number:
          type: string
        booked:
          type: boolean
          default: false
        hotel:
          $ref: '#/components/schemas/Hotel'
        roomType:
          type: string
          description: Available room type
          enum:
            - SINGLE
            - DOUBLE
      xml:
        name: category
    Error:
      type: object
      properties:
        errorCode:
          type: integer
        errorMessage:
          type: string
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
